// Author: Adam Henry, adlhenry@ucsc.edu

myshell - A simple shell

	Supports
		command which terminates shell
			- exit
		command with optional file redirection
			- <command> <options> [><] file
		piped command
			- <command> <options> | <command> <options>
	
	All commands may or may not specify <options>.

DATA
	getLine() - a function generated by flex using lex.l which returns
			    stdin as a pointer to an array of character strings
FUNCTIONS
	errprintf - function to print a warning to stderr
		inputs - a non-null pointer to a character string
		outputs - a warning to stderr
		assumptions - character string is non-null
	
	print_prompt - prints the shell prompt
		inputs - none
		outputs - the "$> " prompt to stdout
		assumptions - print_prompt called before read_command
	
	read_command
		inputs - a pointer to a character string returned by getLine()
		outputs - populates the argvs array with arrays of string characters
				  representing the argv's of separate commands
				  and sets cmdi to the index of the commands in argvs
				  also sets global character strings outfile/infile to the
				  names of files following the redirection symbols
		assumptions - the character array returned by getLine() is non-null
		
	is_exit
		inputs - a non-null pointer to an array of strings
		outputs - true if the array[0] is the string "exit"
				  and false if it is not
		assumptions - the input string array pointer is non-null
		
	redirect
		inputs - globals character strings outfile and infile
		outputs - will close stdout/stdin and open a file uses the same
				  file descriptor
		assumptions - outfile/infile may contain names of files to redirect to
		
	exec_c
		inputs - a string pointer and a pointer to a string array
		outputs - fork() and wait for child to terminate, if child: set redirection,
				  then execute the command and its parameters
		assumptions - both input pointers are non-null
	
	exec_pipe
		inputs - a string pointer, a pointer to a string array, and an int
		outputs - fork() if child: set pipe connection, execute the command
				  and its parameters
		assumptions - both input pointers are non-null, and the int specifies
					  read (0) or write (1) to pipe status
	
	execute_command
		inputs - global cmdi
		outputs - if cmdi is 0 run exec_c, otherwise set global pipefd as a pipe
				  descriptor and run exec_pipe twice, after children exit return
		assumptions - cmdi was set to the index of respective commands in argvs
	
	main
		inputs - int and pointer to array of strings
		outputs - warning message if unsupported command line arguments are 
				  specified to myshell
				  runs the main loop for myshell
					print prompt
					read command
					check for exit command
					execute command
				  returns 0 if successful and 1 if an error occurred
		assumptions - int is count of strings in the string array and the string
					  array is a non-null pointer
		